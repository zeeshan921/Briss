<style>

  {{ section.settings.ss_font_family | font_face: font_display: 'swap' }}
  
  .ss-announcement-bar,
  .ss-announcement-bar__message {
    overflow: hidden;
  }
  .ss-announcement-bar:hover {
    opacity:0.{{section.settings.hover_opacity}};
  }
  .announcement-bar__link {
    display: block;
    width: 100%;
    padding: {{ section.settings.padding_vertical }}rem {{section.settings.padding_horizontal}}rem;
    text-decoration: none;
    color: var(--text-color);
    line-height:0;
  }
  .announcement-bar__link:hover {
    color: var(--text-color);
  }
  #marq {
    width: 100%;
    border: inset;
    overflow: hidden;
    white-space: nowrap;
    box-shadow: unset;
    border: 0;
    box-shadow: unset;
    border-color: currentcolor;
    vertical-align: middle;
  }
  @keyframes marquesina {
    0% {
      transform: translate(0);
    }
    to {
      transform: translate(-50%);
    }
  }
  #orig {
    display: inline-block;
    overflow: hidden;
    transform: translate(0);
    animation: marquesina var(--animation-duration, 45s) infinite normal linear
      1s;
  }
  .ss-announcement-bar__message {
    text-align: center;
    padding: 0;
    margin: 0;
    line-height: 1;
    font-size: {{section.settings.text_size}}px;
    font-family: {{section.settings.ss_font_family.family}};
    font-weight: {{section.settings.ss_font_family.weight}};
  }
  .ss-announcement-bar__message li {
    
    line-height: 1;
    font-size: {{section.settings.text_size}}px;
    font-family: {{section.settings.ss_font_family.family}};
    font-weight: {{section.settings.ss_font_family.weight}};
    display: inline-block;
    padding-right: 114px;
    position: relative;
    
  }
  .ss-announcement-bar__message li::after {
    content: '';
    width: 3.5px;
    height: 3.5px;
    background-color: var(--text-color);
    background-image: none;
    opacity: 0.3;
    border-radius: 50%;
    position: absolute;
    top: 40%;
    right: 50px;
  }
  @media (max-width: 480px) {
    #marq {
      max-height: 39px;
    }
    .ss-announcement-bar__message li {
      padding-right: 55px;
    }
    .ss-announcement-bar__message li::after {
      right: 25px;
    }
  }
</style>

<template id="marquee-announcement-bar-{{ section.id }}">
  <div
    class="ss-announcement-bar"
    aria-label="Announcement"
    style="background-color: {{ section.settings.bg }}; --text-color: {{ section.settings.text_color }}; --animation-duration: {{ section.settings.animation_duration }}s;"
    >
    {%- if section.settings.link != blank -%}
    <a
      href="{{ section.settings.link }}"
      style="cursor: pointer;"
    >
    {% endif %}
    <div class="announcement-bar__link">
      <div class="" id="marq">
        <span id="orig">
          <ul class="ss-announcement-bar__message">
             {% if section.blocks > 1 %}
              {% for i in (1..6) %}
                {% for block in section.blocks %}
                  <li>{{ block.settings.text }}</li>
                {% endfor %}
              {% endfor %}
  
              {% for block in section.blocks limit: 1 %}
                <!-- <li>{{ block.settings.text }}</li> -->
              {% endfor %}
            {% else %}
              {% for i in (1..12) %}
                {% for block in section.blocks %}
                  <li>{{ block.settings.text }}</li>
                {% endfor %}
              {% endfor %}
  
              {% for block in section.blocks limit: 1 %}
                <!-- <li>{{ block.settings.text }}</li> -->
              {% endfor %}
            {% endif %}
          </ul>
        </span>
      </div>
    </div>
    {%- if section.settings.link != blank -%}</a>{% endif %}
  </div>
</template>

<div id="marquee-local-target"></div>

<script>
  window.addEventListener('DOMContentLoaded', (event) => {
    let cssTarget = '{{ section.settings.insert_css_class_target }}';
    let productForm = cssTarget
      ? document.querySelector(cssTarget)
      : document.querySelector('#marquee-local-target');

    if (!productForm) return;

    const templateContent = document.querySelector(
      '#marquee-announcement-bar-{{ section.id }}'
    ).content;

    productForm.insertAdjacentElement(
      'beforebegin',
      templateContent.firstElementChild
    );
  });
</script>

{% schema %}
{
  "name": "Announcement Bar",
  "settings": [
    {
      "type": "header",
      "content": "Save section to see live"
    },
    {
      "type": "text",
      "id": "insert_css_class_target",
      "label": "Target CSS Class",
      "default": ".header, .pageheader, .section-header, #announcement, .toolbar, .header__wrapper",
      "placeholder": ".header, .pageheader",
      "info": "Empty text field this to display where you drag it. If you want to display the announcement bar in a specific place, you can add the CSS class of the target element here. Default is above header as announcement bar."
    },
    {
      "type": "header",
      "content": "Text"
    },
    {
        "type": "range",
        "id": "text_size",
        "label": "Font size",
        "default": 12,
        "min": 8,
        "max": 50,
        "step": 1,
        "unit": "px"
    },
    {
      "type": "font_picker",
      "id": "ss_font_family",
      "label": "Font family",
      "default": "montserrat_n4"
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "url",
      "id": "link",
      "label": "Url"
    },
    {
      "type": "header",
      "content": "Animation"
    },
    {
      "type": "range",
      "id": "animation_duration",
      "label": "Animation Duration",
      "unit": "sec",
      "min": 10,
      "max": 200,
      "step": 2,
      "default": 44
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "bg",
      "label": "Background Color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#fff"
    },
    {
      "type": "range",
      "id": "hover_opacity",
      "label": "Background color hover opacity",
      "unit": "%",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 85
    },
    {
      "type": "header",
      "content": "Padding"
    },
    {
      "type": "range",
      "id": "padding_horizontal",
      "label": "Padding horizontal",
      "unit": "rem",
      "min": 0,
      "max": 5,
      "step": 0.2,
      "default": 2
    },
     {
      "type": "range",
      "id": "padding_vertical",
      "label": "Padding vertical",
      "unit": "rem",
      "min": 0,
      "max": 5,
      "step": 0.1,
      "default": 1.5
    }
  ],
  "presets": [
    {
      "category": "Custom",
      "name": "Scrolling Announcement Bar",
      "blocks": [
        {
          "type": "text",
          "settings":{
            "text":"Free Shipping"
          }
        },
        {
          "type": "text",
           "settings":{
            "text":"Free Returns"
          }
        }
      ]
    }
  ],
  "max_blocks": 6,
  "blocks": [
    {
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Free Shipping"
        }
      ]
    }
  ]
}
{% endschema %}

